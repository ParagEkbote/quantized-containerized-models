[project]
name = "quantized-containerized-models"
version = "0.3.0"
description = "Deploy AI models in reproducible, containerized environments using Cog â€” scalable, hardware-efficient inference with quantized models."
authors = [{ name = "Parag Ekbote", email = "paragekbote23@gmail.com" }]
readme = "README.md"
license = { text = "Apache 2.0" }
requires-python = ">=3.10"

# ===== Core Dependencies =====
dependencies = [
    "torch>=2.1.0",
    "cog>=0.9.3"
]

# ===== Optional Dependency Groups =====
[project.optional-dependencies]
smollm3 = [
    "colorama",
    "IPython",
    "pruna"
]

unsloth = [
    "packaging",
    "wheel",
    "ninja",
    "cmake",
    "flash-attn",
    "transformers",
    "accelerate",
    "unsloth",
    "unsloth_zoo"
]

flux-fast-lora-img2img = [
    "pillow>=11.3.0",
    "transformers>=4.52.0",
    "accelerate>=1.8.0",
    "diffusers>=0.33.0",
    "bitsandbytes>=0.45.0",
    "python-dotenv==1.1.1",
    "huggingface-hub[hf-xet]",
    "peft>=0.15.0",
    "sentencepiece>=0.1.95",
    "protobuf>=3.20.0"
]

flux-fast-lora = [
    "pillow>=11.3.0",
    "transformers>=4.52.0",
    "accelerate>=1.8.0",
    "diffusers>=0.33.0",
    "bitsandbytes>=0.45.0",
    "python-dotenv==1.1.1",
    "huggingface-hub[hf-xet]",
    "peft>=0.15.0",
    "sentencepiece>=0.1.95",
    "protobuf>=3.20.0"
]

gemma-torchao = [
    "pillow>=11.3.0",
    "transformers>=4.52.0",
    "accelerate>=1.8.0",
    "bitsandbytes>=0.45.0",
    "python-dotenv==1.1.1",
    "huggingface-hub[hf-xet]",
    "sentencepiece>=0.1.95",
    "protobuf>=3.20.0",
    "requests>=2.31.0",
    "torchvision",
    "torchao"
]

test = [
    "pre-commit",
    "pytest"
]



# ===== Pytest =====
[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q"
testpaths = ["tests"]
pythonpath = ["."]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

# ===== Ruff Linting & Formatting =====
[tool.ruff]
line-length = 99
target-version = "py310"
fix = true
show-fixes = true
select = ["E", "F", "I", "B", "UP"]
ignore = ["E203", "W503"]
exclude = ["__pycache__", "build", "dist"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"
docstring-code-format = true

# -----------------------------
# Type checker configuration
# -----------------------------
[tool.ty.rules]
unresolved-import = "ignore"
invalid-assignment = "ignore"
call-non-callable = "ignore"
index-out-of-bounds = "ignore"
unresolved-attribute = "ignore"
redundant-cast = "ignore"
unsupported-operator = "ignore"
invalid-argument-type = "ignore"

# ===== UV Integration =====
[tool.uv]
commands = [
    "uv pip install --system packaging wheel ninja cmake torch",
    "uv pip install --system -U flash-attn --no-build-isolation",
    "uv pip install --system transformers accelerate unsloth unsloth_zoo"
]

[tool.uv.scripts]
lint = "pre-commit run --all-files"
test = "pytest -q --disable-warnings"
