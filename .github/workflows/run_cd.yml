name: Push to Replicate (CD)

on:
  workflow_dispatch:
    inputs:
      model_name:
        description: 'Enter model name: smollm3 | unsloth | flux-fast-lora | flux-fast-lora-img2img | gemma-torchao'
        required: true

jobs:
  push_to_replicate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Free disk space (for large models)
        if: contains(fromJSON('["smollm3","flux-fast-lora","flux-fast-lora-img2img","gemma-torchao"]'), inputs.model_name)
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: false
          docker-images: false

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache UV dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml', '**/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install UV
        run: pip install -U uv

      - name: Install Dependencies
        run: |
          case "${{ inputs.model_name }}" in
            smollm3) uv install -G smollm3 ;;
            unsloth) uv install -G unsloth ;;
            flux-fast-lora) uv install -G flux-fast-lora ;;
            flux-fast-lora-img2img) uv install -G flux-fast-lora-img2img ;;
            gemma-torchao) uv install -G gemma-torchao ;;
            *) echo "Unknown model_name: ${{ inputs.model_name }}" && exit 1 ;;
          esac

      - name: Run Pre-commit
        run: uv run lint

      - name: Run Tests
        run: uv run test

      - name: Setup Cog
        uses: replicate/setup-cog@v2
        with:
          token: ${{ secrets.REPLICATE_CLI_AUTH_TOKEN }}
          install-cuda: true

      - name: Validate Cog Build
        run: |
          cd src/models/${{ inputs.model_name }}
          cog build

      - name: Push Model to Replicate
        if: github.ref == 'refs/heads/main'
        run: |
          cd src/models/${{ inputs.model_name }}
          cog push replicate/ParagEkbote/${{ inputs.model_name }}

      - name: Deployment Summary
        if: always()
        run: |
          echo "âœ… Model deployed successfully!"
          echo "Model: ${{ inputs.model_name }}"
          echo "Owner: ParagEkbote"
          echo "Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
